# Apache configuration file
# Generated by PythonWeb Installer

# Global configuration
ServerRoot "/etc/apache2"
ServerAdmin {{ server_admin|default('webmaster@localhost') }}
ServerName {{ server_name|default('localhost') }}
ServerTokens {{ server_tokens|default('Prod') }}
ServerSignature {{ server_signature|default('Off') }}
TraceEnable {{ trace_enable|default('Off') }}

# MPM configuration
<IfModule {{ mpm_module|default('mpm_event_module') }}>
    StartServers {{ start_servers|default(2) }}
    {% if mpm_module == 'mpm_prefork_module' %}
    MinSpareServers {{ min_spare_servers|default(5) }}
    MaxSpareServers {{ max_spare_servers|default(10) }}
    MaxRequestWorkers {{ max_request_workers|default(150) }}
    MaxConnectionsPerChild {{ max_connections_per_child|default(0) }}
    {% else %}
    MinSpareThreads {{ min_spare_threads|default(25) }}
    MaxSpareThreads {{ max_spare_threads|default(75) }}
    ThreadLimit {{ thread_limit|default(64) }}
    ThreadsPerChild {{ threads_per_child|default(25) }}
    MaxRequestWorkers {{ max_request_workers|default(150) }}
    MaxConnectionsPerChild {{ max_connections_per_child|default(0) }}
    {% endif %}
</IfModule>

# Basic configuration
Timeout {{ timeout|default(60) }}
KeepAlive {{ keep_alive|default('On') }}
MaxKeepAliveRequests {{ max_keep_alive_requests|default(100) }}
KeepAliveTimeout {{ keep_alive_timeout|default(5) }}
HostnameLookups {{ hostname_lookups|default('Off') }}

# Modules
LoadModule authz_core_module /usr/lib/apache2/modules/mod_authz_core.so
LoadModule authz_host_module /usr/lib/apache2/modules/mod_authz_host.so
LoadModule dir_module /usr/lib/apache2/modules/mod_dir.so
LoadModule mime_module /usr/lib/apache2/modules/mod_mime.so
LoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so
LoadModule headers_module /usr/lib/apache2/modules/mod_headers.so
LoadModule expires_module /usr/lib/apache2/modules/mod_expires.so
LoadModule deflate_module /usr/lib/apache2/modules/mod_deflate.so
LoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi.so
{% if ssl_enabled|default(False) %}
LoadModule ssl_module /usr/lib/apache2/modules/mod_ssl.so
{% endif %}
{% if mod_security_enabled|default(False) %}
LoadModule security2_module /usr/lib/apache2/modules/mod_security2.so
{% endif %}
{% if mod_evasive_enabled|default(False) %}
LoadModule evasive20_module /usr/lib/apache2/modules/mod_evasive20.so
{% endif %}

# Logging
ErrorLog ${APACHE_LOG_DIR}/error.log
LogLevel {{ log_level|default('warn') }}
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
CustomLog ${APACHE_LOG_DIR}/access.log combined

# Default directory index
<IfModule dir_module>
    DirectoryIndex index.html index.htm index.php
</IfModule>

# MIME types
<IfModule mime_module>
    TypesConfig /etc/apache2/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
</IfModule>

# Compression
<IfModule deflate_module>
    {% if compression|default(True) %}
    AddOutputFilterByType DEFLATE text/html text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript
    {% endif %}
</IfModule>

# Expires
<IfModule expires_module>
    {% if expires_active|default(True) %}
    ExpiresActive On
    ExpiresDefault "{{ expires_default|default('access plus 1 month') }}"
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/pdf "access plus 1 month"
    ExpiresByType text/javascript "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    ExpiresByType application/x-javascript "access plus 1 month"
    ExpiresByType application/x-shockwave-flash "access plus 1 month"
    ExpiresByType image/x-icon "access plus 1 year"
    {% endif %}
</IfModule>

# Security headers
<IfModule headers_module>
    {% if headers|default(False) %}
    {% for header in headers %}
    Header {{ header }}
    {% endfor %}
    {% endif %}
</IfModule>

# Virtual host configuration
<VirtualHost *:{{ ssl_enabled|default(False) and '443' or '80' }}>
    ServerName {{ server_name|default('localhost') }}
    {% if server_alias|default(False) %}
    ServerAlias {{ server_alias }}
    {% endif %}
    
    DocumentRoot {{ document_root|default('/var/www/html') }}
    
    # SSL Configuration
    {% if ssl_enabled|default(False) %}
    SSLEngine {{ ssl_engine|default('on') }}
    SSLCertificateFile {{ ssl_certificate_file }}
    SSLCertificateKeyFile {{ ssl_certificate_key_file }}
    SSLProtocol {{ ssl_protocols|default('all -SSLv3 -TLSv1 -TLSv1.1') }}
    SSLCipherSuite {{ ssl_cipher_suite|default('HIGH:!aNULL:!MD5') }}
    SSLHonorCipherOrder {{ ssl_honor_cipher_order|default('on') }}
    {% if ssl_use_stapling|default(True) %}
    SSLUseStapling {{ ssl_use_stapling|default('on') }}
    SSLStaplingCache {{ ssl_stapling_cache|default('shmcb:/var/run/apache2/ssl_stapling(32768)') }}
    {% endif %}
    {% endif %}
    
    # Logging
    ErrorLog {{ error_log|default('${APACHE_LOG_DIR}/error.log') }}
    CustomLog {{ custom_log|default('${APACHE_LOG_DIR}/access.log combined') }}
    
    # Directory configuration
    <Directory {{ document_root|default('/var/www/html') }}>
        Options -Indexes +FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>
    
    # IP Filtering
    {% if ip_allow_deny_rules|default(False) %}
    {% for rule in ip_allow_deny_rules %}
    {{ rule }}
    {% endfor %}
    {% endif %}
    
    # Basic Authentication
    {% if auth_type|default(False) %}
    <Location />
        AuthType {{ auth_type }}
        AuthName {{ auth_name|default('"Restricted Area"') }}
        AuthBasicProvider {{ auth_basic_provider|default('file') }}
        AuthUserFile {{ auth_user_file }}
        Require {{ require|default('valid-user') }}
    </Location>
    {% endif %}
    
    # WSGI configuration
    {% if wsgi_daemon_process|default(False) %}
    WSGIDaemonProcess {{ wsgi_daemon_process }}
    WSGIProcessGroup {{ wsgi_process_group }}
    WSGIScriptAlias {{ wsgi_script_alias }}
    {% endif %}
    
    # Static files
    {% if alias|default(False) %}
    {% for url, path in alias.items() %}
    Alias {{ url }} {{ path }}
    {% endfor %}
    {% endif %}
    
    # Directory permissions
    {% if directory|default(False) %}
    {% for path, config in directory.items() %}
    <Directory {{ path }}>
        {% for directive, value in config.items() %}
        {{ directive }} {{ value }}
        {% endfor %}
    </Directory>
    {% endfor %}
    {% endif %}
    
    # Cache configuration
    {% if cache_enabled|default(False) %}
    CacheEnable {{ cache_enabled }}
    CacheLock {{ cache_lock|default('On') }}
    CacheLockMaxAge {{ cache_lock_max_wait|default(5) }}
    CacheDirLevels 2
    CacheDirLength 1
    CacheMinFileSize {{ cache_min_file_size|default(1) }}
    CacheMaxFileSize {{ cache_max_file_size|default(1000000) }}
    CacheTimeMargin 10
    CacheMaxExpire {{ cache_timeout|default(3600) }}
    {% endif %}
    
    # ModSecurity configuration
    {% if mod_security_enabled|default(False) %}
    <IfModule security2_module>
        SecRuleEngine On
        SecRequestBodyAccess On
        SecResponseBodyAccess On
        SecResponseBodyMimeType text/plain text/html text/xml application/json
        SecResponseBodyLimit 524288
        SecServerSignature "Apache"
        SecAuditEngine RelevantOnly
        SecAuditLogRelevantStatus "^(?:5|4(?!04))"
        SecAuditLogParts ABIJDEFHZ
        SecAuditLogType Serial
        SecAuditLog ${APACHE_LOG_DIR}/modsec_audit.log
        SecDefaultAction "phase:2,deny,log,status:403"
        SecRule REQUEST_HEADERS:Content-Type "text/xml" "id:1000,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"
        SecRule REQUEST_HEADERS:Content-Type "application/json" "id:1001,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=JSON"
    </IfModule>
    {% endif %}
    
    # ModEvasive configuration
    {% if mod_evasive_enabled|default(False) %}
    <IfModule mod_evasive20.c>
        DOSHashTableSize 3097
        DOSPageCount 2
        DOSSiteCount 50
        DOSPageInterval 1
        DOSSiteInterval 1
        DOSBlockingPeriod 10
        DOSLogDir "/var/log/apache2/evasive"
    </IfModule>
    {% endif %}
</VirtualHost>

{% if ssl_enabled|default(False) %}
# HTTP to HTTPS redirect
<VirtualHost *:80>
    ServerName {{ server_name|default('localhost') }}
    {% if server_alias|default(False) %}
    ServerAlias {{ server_alias }}
    {% endif %}
    
    Redirect permanent / https://{{ server_name|default('localhost') }}/
</VirtualHost>
{% endif %}
