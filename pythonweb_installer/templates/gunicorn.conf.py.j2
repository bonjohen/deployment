"""
Gunicorn configuration file.
Generated by PythonWeb Installer.
"""
import multiprocessing

# Server socket
bind = "{{ bind|default('0.0.0.0:8000') }}"
backlog = {{ backlog|default(2048) }}

# Worker processes
workers = {{ workers|default(4) }}
worker_class = "{{ worker_class|default('sync') }}"
threads = {{ threads|default(1) }}
worker_connections = {{ worker_connections|default(1000) }}
max_requests = {{ max_requests|default(1000) }}
max_requests_jitter = {{ max_requests_jitter|default(50) }}
timeout = {{ timeout|default(30) }}
graceful_timeout = {{ graceful_timeout|default(30) }}
keepalive = {{ keepalive|default(2) }}

# Process naming
proc_name = "{{ proc_name|default('gunicorn') }}"
default_proc_name = "{{ default_proc_name|default('gunicorn') }}"

# Server mechanics
daemon = {{ 'True' if daemon|default(False) else 'False' }}
pidfile = "{{ pid_file|default('gunicorn.pid') }}"
umask = {{ umask|default(0) }}
user = "{{ user|default(None) }}"
group = "{{ group|default(None) }}"
tmp_upload_dir = "{{ tmp_upload_dir|default(None) }}"

# Logging
accesslog = "{{ accesslog|default('access.log') }}"
errorlog = "{{ errorlog|default('error.log') }}"
loglevel = "{{ loglevel|default('info') }}"
access_log_format = '{{ access_log_format|default('%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"') }}'

# Process hooks
def on_starting(server):
    pass

def on_reload(server):
    pass

def when_ready(server):
    pass

def on_exit(server):
    pass

# Server hooks
def pre_fork(server, worker):
    pass

def post_fork(server, worker):
    pass

def pre_exec(server):
    pass

def pre_request(worker, req):
    worker.log.debug("%s %s" % (req.method, req.path))

def post_request(worker, req, environ, resp):
    pass

def child_exit(server, worker):
    pass

def worker_exit(server, worker):
    pass

def worker_abort(worker):
    pass

# SSL
{% if ssl_enabled|default(False) %}
keyfile = "{{ ssl_key }}"
certfile = "{{ ssl_cert }}"
{% endif %}

# Server Mechanics
preload_app = {{ 'True' if preload_app|default(True) else 'False' }}
reuse_port = {{ 'True' if reuse_port|default(False) else 'False' }}
chdir = "{{ app_dir|default('.') }}"

# Debugging
reload = {{ 'True' if debug|default(False) else 'False' }}
reload_engine = "{{ reload_engine|default('auto') }}"
spew = {{ 'True' if spew|default(False) else 'False' }}
check_config = {{ 'True' if check_config|default(False) else 'False' }}

# Server Mechanics
limit_request_line = {{ limit_request_line|default(4094) }}
limit_request_fields = {{ limit_request_fields|default(100) }}
limit_request_field_size = {{ limit_request_field_size|default(8190) }}

# Logging
capture_output = {{ 'True' if capture_output|default(False) else 'False' }}
logger_class = "{{ logger_class|default('gunicorn.glogging.Logger') }}"
logconfig = "{{ logconfig|default(None) }}"
syslog = {{ 'True' if syslog|default(False) else 'False' }}
syslog_addr = "{{ syslog_addr|default('udp://localhost:514') }}"
syslog_prefix = "{{ syslog_prefix|default('gunicorn') }}"
syslog_facility = "{{ syslog_facility|default('user') }}"
enable_stdio_inheritance = {{ 'True' if enable_stdio_inheritance|default(False) else 'False' }}
statsd_host = "{{ statsd_host|default(None) }}"
statsd_prefix = "{{ statsd_prefix|default('') }}"
dogstatsd_tags = "{{ dogstatsd_tags|default('') }}"

# Process Naming
proc_name = "{{ proc_name|default('gunicorn') }}"
default_proc_name = "{{ default_proc_name|default('gunicorn') }}"

# SSL
{% if ssl_enabled|default(False) %}
ssl_version = "{{ ssl_version|default('TLSv1_2') }}"
cert_reqs = {{ cert_reqs|default(0) }}
ca_certs = "{{ ca_certs|default(None) }}"
suppress_ragged_eofs = {{ 'True' if suppress_ragged_eofs|default(True) else 'False' }}
do_handshake_on_connect = {{ 'True' if do_handshake_on_connect|default(False) else 'False' }}
ciphers = "{{ ciphers|default('TLSv1.2') }}"
{% endif %}

# Security
limit_request_line = {{ limit_request_line|default(4094) }}
limit_request_fields = {{ limit_request_fields|default(100) }}
limit_request_field_size = {{ limit_request_field_size|default(8190) }}

# Debugging
reload = {{ 'True' if debug|default(False) else 'False' }}
reload_engine = "{{ reload_engine|default('auto') }}"
reload_extra_files = {{ reload_extra_files|default([]) }}
spew = {{ 'True' if spew|default(False) else 'False' }}
check_config = {{ 'True' if check_config|default(False) else 'False' }}

# Server Hooks
def post_fork(server, worker):
    server.log.info("Worker spawned (pid: %s)", worker.pid)

def pre_fork(server, worker):
    pass

def pre_exec(server):
    server.log.info("Forked child, re-executing.")

def when_ready(server):
    server.log.info("Server is ready. Spawning workers")

def worker_int(worker):
    worker.log.info("worker received INT or QUIT signal")

def worker_abort(worker):
    worker.log.info("worker received SIGABRT signal")

def worker_exit(server, worker):
    server.log.info("Worker exited (pid: %s)", worker.pid)

def child_exit(server, worker):
    server.log.info("Child exited (pid: %s)", worker.pid)
