#!/bin/bash
# Gunicorn startup script
# Generated by PythonWeb Installer

# Set environment variables
export PYTHONPATH="{{ app_dir }}"
export APP_ENV="{{ environment|default('production') }}"

# Create log directory if it doesn't exist
mkdir -p "{{ log_dir }}"

# Activate virtual environment
source "{{ python_path|replace('bin/python', 'bin/activate')|replace('Scripts/python.exe', 'Scripts/activate') }}"

# Start Gunicorn
echo "Starting Gunicorn server..."
cd "{{ app_dir }}"

{% if config_file|default(False) %}
# Start with config file
{{ gunicorn_path }} -c "{{ config_file }}" {{ app_module }}
{% else %}
# Start with command line options
{{ gunicorn_path }} \
    --bind={{ bind|default('0.0.0.0:8000') }} \
    --workers={{ workers|default(4) }} \
    --threads={{ threads|default(2) }} \
    {% if worker_class|default(False) %}--worker-class={{ worker_class }} \{% endif %}
    --timeout={{ timeout|default(30) }} \
    --max-requests={{ max_requests|default(1000) }} \
    --max-requests-jitter={{ max_requests_jitter|default(50) }} \
    --access-logfile="{{ log_dir }}/access.log" \
    --error-logfile="{{ log_dir }}/error.log" \
    --log-level={{ log_level|default('info') }} \
    {% if daemon|default(False) %}--daemon \{% endif %}
    {% if pid_file|default(False) %}--pid="{{ pid_file }}" \{% endif %}
    {{ app_module }}
{% endif %}

# Check if Gunicorn started successfully
if [ $? -eq 0 ]; then
    echo "Gunicorn started successfully."
    exit 0
else
    echo "Failed to start Gunicorn."
    exit 1
fi
